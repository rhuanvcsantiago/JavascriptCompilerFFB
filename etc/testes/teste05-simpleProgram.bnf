<PROGRAM> = <BEGIN> <MAIN_PROGRAM> <END>

<MAIN_PROGRAM> = <THINGS> <END_LINE>
<MAIN_PROGRAM> = <THINGS> <END_LINE> <MAIN_PROGRAM>

<THINGS> = <FUNCTION_CALL>
<THINGS> = <EXPRESSION>
<THINGS> = <VARIABLE_DECLARATION>
<THINGS> = <VARIABLE_ATTRIBUTION>

<VARIABLE_DECLARATION> = <TYPE> <IDENTIFIER_SEQUENCE> 

<VARIABLE_ATTRIBUTION> = <IDENTIFIER> <ATTRIBUITING_OPERATOR> <EXPRESSION>

<IDENTIFIER_SEQUENCE> = <IDENTIFIER> 
<IDENTIFIER_SEQUENCE> = <IDENTIFIER> <VARIABLE_SEPARATOR> <IDENTIFIER_SEQUENCE>

<FUNCTION_CALL> = <IDENTIFIER> <PRIMARY_SEPARATOR_OPEN> <FUNCTION_CALL_ARGS> <PRIMARY_SEPARATOR_CLOSE>
<FUNCTION_CALL> = <IDENTIFIER> <PRIMARY_SEPARATOR_OPEN> <PRIMARY_SEPARATOR_CLOSE>

<FUNCTION_CALL_ARGS> = <FUNCTION_CALL_ARGS> <VARIABLE_SEPARATOR> <FUNCTION_CALL_ARGS> 
<FUNCTION_CALL_ARGS> = <COMPLEX_ELEMENTS> 

<COMPLEX_ELEMENTS> = <EXPRESSION>
<COMPLEX_ELEMENTS> = <BASIC_ELEMENTS>

<BASIC_ELEMENTS> = <NUMBER>
<BASIC_ELEMENTS> = <IDENTIFIER>
<BASIC_ELEMENTS> = <FUNCTION_CALL> 

<PRIMARY_SEPARATOR_OPEN> = (
<PRIMARY_SEPARATOR_CLOSE> = )

<EXPRESSION> = <PRIMARY_SEPARATOR_OPEN> <BASIC_ELEMENTS> <OPERATOR> <BASIC_ELEMENTS> <PRIMARY_SEPARATOR_CLOSE>
<EXPRESSION> = <PRIMARY_SEPARATOR_OPEN> <BASIC_ELEMENTS> <OPERATOR> <EXPRESSION> <PRIMARY_SEPARATOR_CLOSE>
<EXPRESSION> = <PRIMARY_SEPARATOR_OPEN> <EXPRESSION> <OPERATOR> <BASIC_ELEMENTS> <PRIMARY_SEPARATOR_CLOSE>
<EXPRESSION> = <PRIMARY_SEPARATOR_OPEN> <EXPRESSION> <OPERATOR> <EXPRESSION> <PRIMARY_SEPARATOR_CLOSE>

<OPERATOR> = <BASIC_OPERATOR>
<OPERATOR> = <COMPLEX_OPERATOR>

<END_LINE> = ;
<VARIABLE_SEPARATOR> = ,

<BASIC_OPERATOR> = + 
<BASIC_OPERATOR> = -

<COMPLEX_OPERATOR> = * 
<COMPLEX_OPERATOR> = /

<BEGIN> = INICIO
<END> = FIM

<TYPE> = BOOLEAN
<TYPE> = NUMERO
<TYPE> = TEXTO

