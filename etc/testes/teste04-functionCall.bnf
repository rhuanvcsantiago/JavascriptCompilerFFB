<PROGRAM> = <FUNCTION_CALL> <END_LINE>
<PROGRAM> = <FUNCTION_CALL> <END_LINE> <PROGRAM>

<FUNCTION_CALL> = <IDENTIFIER> <PRIMARY_SEPARATOR_OPEN> <FUNCTION_CALL_ARGS> <PRIMARY_SEPARATOR_CLOSE>
<FUNCTION_CALL> = <IDENTIFIER> <PRIMARY_SEPARATOR_OPEN> <PRIMARY_SEPARATOR_CLOSE>

<FUNCTION_CALL_ARGS> = <FUNCTION_CALL_ARGS> <VARIABLE_SEPARATOR> <FUNCTION_CALL_ARGS> 
<FUNCTION_CALL_ARGS> = <COMPLEX_ELEMENTS> 

<COMPLEX_ELEMENTS> = <EXPRESSION>
<COMPLEX_ELEMENTS> = <BASIC_ELEMENTS>

<BASIC_ELEMENTS> = <NUMBER>
<BASIC_ELEMENTS> = <IDENTIFIER>
<BASIC_ELEMENTS> = <FUNCTION_CALL> 

<PRIMARY_SEPARATOR_OPEN> = (
<PRIMARY_SEPARATOR_CLOSE> = )

<EXPRESSION> = <PRIMARY_SEPARATOR_OPEN> <BASIC_ELEMENTS> <OPERATOR> <BASIC_ELEMENTS> <PRIMARY_SEPARATOR_CLOSE>
<EXPRESSION> = <PRIMARY_SEPARATOR_OPEN> <BASIC_ELEMENTS> <OPERATOR> <EXPRESSION> <PRIMARY_SEPARATOR_CLOSE>
<EXPRESSION> = <PRIMARY_SEPARATOR_OPEN> <EXPRESSION> <OPERATOR> <BASIC_ELEMENTS> <PRIMARY_SEPARATOR_CLOSE>

<COMPARISON_EXPRESSION> = <COMPLEX_ELEMENTS> <COMPASISON_OPERATOR> <COMPLEX_ELEMENTS> 

<ALL_ELEMENTS> = <COMPLEX_ELEMENTS>
<ALL_ELEMENTS> = <TEXT>
<ALL_ELEMENTS> = <BOOLEAN>

<OPERATOR> = <BASIC_OPERATOR>
<OPERATOR> = <COMPLEX_OPERATOR>

<END_LINE> = ;
<VARIABLE_SEPARATOR> = ,

<BASIC_OPERATOR> = + 
<BASIC_OPERATOR> = -

<COMPLEX_OPERATOR> = * 
<COMPLEX_OPERATOR> = /
